@page "/welcome"

@layout MainNoNavMenuLayout

@using Rick_Player.Main.Services
@using Rick_Player.Main.Services.ResquestAPI

@inject RickPlayerManager RickPlayer
@inject NavigationManager NavManager
@inject ProtectedLocalStorage LocalStorage

<PageTitle>Seja bem-vindo ao Rick Player!!</PageTitle>


<MudStack Spacing="8">
    <MudText Typo="Typo.h3" Align="Align.Center">
        <bold>Bem-vindos ao Rick Player</bold>
    </MudText>

    <MudText Typo="Typo.h6" Align="Align.Center">
        Rick Player é um aplicativo de código aberto que permite que você e seus amigos ouçam música juntos usando a fila do Youtube.
    </MudText>


    <MudDivider />


    <MudText Typo="Typo.body1" Align="Align.Center">
        Antes de começarmos, diga-nos o seu nome na caixa abaixo. Isso ajudará seus colegas de festa a identificar em quais músicas incríveis você votou e quão incrível é (ou não) seu gosto musical!
    </MudText>
    <MudText Typo="Typo.body1" Align="Align.Center">
        Brincadeirinha, aqui temos espaço para todos os gostos! De Metallica à Lady Gaga, faça do Rick Player a sua casa!
    </MudText>

    <MudTextField @bind-Value="_clientNameInput" Label="Seja criativo! Você pode usar o seu emoji favorito ao lado do seu nome." 
                  HelperText="Seja criativo! Você pode usar o seu emoji favorito ao lado do seu nome." Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Outlined.Edit" AdornmentColor="Color.Primary" />


    <MudDivider />


    <MudText Class="mb-n6" Typo="Typo.body1" Align="Align.Center">
        Se você é um convidado, você já está pronto para começar a ouvir suas músicas favoritas e as de seus amigos, basta pressionar este botão para inicar 👇
    </MudText>
    <MudButton OnClick="@GuestSignInAsync" Variant="Variant.Filled" Color="Color.Primary">
        ENTRAR COMO CONVIDADO
    </MudButton>

    @if (_showErrorDialog)
    {
        <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Class="mb-n4">
            Por favor, para continuar, escreva o seu nome na caixa acima e tente de novo!
        </MudAlert>
    }

    <MudText Class="mt-2 mb-n6" Typo="Typo.body1" Align="Align.Center">
        Se você é o dono da festa, faça o login usando sua conta do Spotify para que o Rick Player possa enfileirar as músicas para você e seus amigos!
    </MudText>
    <MudButton OnClick="@YoutubeSignInAsync" Variant="Variant.Filled" Color="Color.Success">
        ENTRAR COM GOOGLE
    </MudButton>
</MudStack>


@code {
    private const int _MAX_CHARS = 26;

    private string? _clientNameInput;
    private bool _showErrorDialog = false;

    private async Task YoutubeSignInAsync()
    {
        if (!ValidateName())
            return;

        await SaveClientAsync();

        string state = new Random().Next().ToString();
        await LocalStorage.SetAsync("state", state);

        try
        {
            NavManager.NavigateTo(RickPlayer.YoutubeSignInUri(state).ToString());
        }
        catch (Exception ex)
        {
            if (ex is YoutubeApiException || ex is HttpRequestException)
                NavManager.NavigateTo("/unhandled-error" + QueryString.Create("message", ex.Message));
            else
                throw;
        }
    }

    private async Task GuestSignInAsync()
    {
        if (!ValidateName())
            return;

        await SaveClientAsync();

        NavManager.NavigateTo("/help");
    }

    private bool ValidateName()
    {
        if (_clientNameInput is null)
        {
            _showErrorDialog = true;
            return false;
        }
        else
        {
            if (_clientNameInput.Length > _MAX_CHARS)
                _clientNameInput = _clientNameInput.Substring(0, _MAX_CHARS);

            return true;
        }
    }

    private async Task SaveClientAsync()
    {
        Client thisClient = new Client(Guid.NewGuid().ToString(), _clientNameInput ??= "ERROR_NO_NAME_FOUND");

        RickPlayer.Clients.Add(thisClient);

        await LocalStorage.SetAsync("this_client", thisClient);
    }
}
